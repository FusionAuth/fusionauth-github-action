name: "fa-action"
description: "Run FusionAuth for testing your application in a GitHub workflow"
branding:
  icon: "user-check"
  color: "blue"
inputs:
  DATABASE_USERNAME:
    default: fusionauth
  DATABASE_PASSWORD:
    default: hkaLBM3RVnyYeYeqE3WI1w2e4Avpy0Wd5O3s3
  FUSIONAUTH_APP_KICKSTART_FILE:
    default: /usr/local/fusionauth/kickstart/kickstart.json
  FUSIONAUTH_APP_MEMORY:
    default: 512M
  FUSIONAUTH_APP_RUNTIME_MODE:
    default: development
  OPENSEARCH_JAVA_OPTS:
    default: '"-Xms512m -Xmx512m"'
  POSTGRES_USER:
    default: postgres
  POSTGRES_PASSWORD:
    default: postgres
runs:
  using: "composite"
  steps:
    - name: Get docker-compose.yaml
      uses: actions/checkout@v4
      with:
        repository: 'mordavia/fusionauth_github_marketplace_action'
        path: 'faDockerComposeFilePath'

# todo: try just start db, then search, then fa alone. try run fa locally without search. then try in github.

    # - name: Start FusionAuth
    #   run: docker-compose -f faDockerComposeFilePath/docker-compose.yaml up -d # -d in background
    #   shell: bash
    #   env:
    #     POSTGRES_USER: ${{ inputs.POSTGRES_USER }}
    #     POSTGRES_PASSWORD: ${{ inputs.POSTGRES_PASSWORD }}
    #     DATABASE_USERNAME: ${{ inputs.DATABASE_USERNAME }}
    #     DATABASE_PASSWORD: ${{ inputs.DATABASE_PASSWORD }}
    #     FUSIONAUTH_APP_MEMORY: ${{ inputs.FUSIONAUTH_APP_MEMORY }}
    #     FUSIONAUTH_APP_RUNTIME_MODE: ${{ inputs.FUSIONAUTH_APP_RUNTIME_MODE }}
    #     FUSIONAUTH_APP_KICKSTART_FILE: ${{ inputs.FUSIONAUTH_APP_KICKSTART_FILE }}
    #     OPENSEARCH_JAVA_OPTS: ${{ inputs.OPENSEARCH_JAVA_OPTS }}

    - name: Start DB
      run: docker-compose -f faDockerComposeFilePath/docker-compose.yaml up -d db
      shell: bash
      env:
        POSTGRES_USER: ${{ inputs.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ inputs.POSTGRES_PASSWORD }}
        DATABASE_USERNAME: ${{ inputs.DATABASE_USERNAME }}
        DATABASE_PASSWORD: ${{ inputs.DATABASE_PASSWORD }}
        FUSIONAUTH_APP_MEMORY: ${{ inputs.FUSIONAUTH_APP_MEMORY }}
        FUSIONAUTH_APP_RUNTIME_MODE: ${{ inputs.FUSIONAUTH_APP_RUNTIME_MODE }}
        FUSIONAUTH_APP_KICKSTART_FILE: ${{ inputs.FUSIONAUTH_APP_KICKSTART_FILE }}
        OPENSEARCH_JAVA_OPTS: ${{ inputs.OPENSEARCH_JAVA_OPTS }}

    - name: Start Search
      run: docker-compose -f faDockerComposeFilePath/docker-compose.yaml up -d search
      shell: bash
      env:
        POSTGRES_USER: ${{ inputs.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ inputs.POSTGRES_PASSWORD }}
        DATABASE_USERNAME: ${{ inputs.DATABASE_USERNAME }}
        DATABASE_PASSWORD: ${{ inputs.DATABASE_PASSWORD }}
        FUSIONAUTH_APP_MEMORY: ${{ inputs.FUSIONAUTH_APP_MEMORY }}
        FUSIONAUTH_APP_RUNTIME_MODE: ${{ inputs.FUSIONAUTH_APP_RUNTIME_MODE }}
        FUSIONAUTH_APP_KICKSTART_FILE: ${{ inputs.FUSIONAUTH_APP_KICKSTART_FILE }}
        OPENSEARCH_JAVA_OPTS: ${{ inputs.OPENSEARCH_JAVA_OPTS }}

    - name: Start FusionAuth
      run: docker-compose -f faDockerComposeFilePath/docker-compose.yaml up -d fusionauth
      shell: bash
      env:
        POSTGRES_USER: ${{ inputs.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ inputs.POSTGRES_PASSWORD }}
        DATABASE_USERNAME: ${{ inputs.DATABASE_USERNAME }}
        DATABASE_PASSWORD: ${{ inputs.DATABASE_PASSWORD }}
        FUSIONAUTH_APP_MEMORY: ${{ inputs.FUSIONAUTH_APP_MEMORY }}
        FUSIONAUTH_APP_RUNTIME_MODE: ${{ inputs.FUSIONAUTH_APP_RUNTIME_MODE }}
        FUSIONAUTH_APP_KICKSTART_FILE: ${{ inputs.FUSIONAUTH_APP_KICKSTART_FILE }}
        OPENSEARCH_JAVA_OPTS: ${{ inputs.OPENSEARCH_JAVA_OPTS }}
